name: CI
on:
  push:
    branches: [ master, feature/* ]
  pull_request:
    branches: [ master, feature/* ]
jobs:
  install-dependencies:
    name: Install dependencies
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 16.x ]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Cache node_modules
        uses: ./.github/actions/cache-node-modules
      - name: Install Dependencies
        run: |
          [ -d node_modules ] || npm ci --no-audit --progress=false

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: install-dependencies
    strategy:
      matrix:
        node-version: [ 16.x ]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Restore node_modules
        uses: ./.github/actions/cache-node-modules
      - name: Test
        run: npm run test -- --watch false --progress false --browsers ChromeHeadlessCI --code-coverage
      - name: Archive production artifact
        uses: actions/upload-artifact@master
        with:
          name: reports
          path: reports

  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: install-dependencies
    strategy:
      matrix:
        node-version: [ 16.x ]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Restore node_modules
        uses: ./.github/actions/cache-node-modules
      - name: Lint
        run: npm run lint

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    strategy:
      matrix:
        node-version: [ 16.x ]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Restore node_modules
        uses: ./.github/actions/cache-node-modules
      - name: Build
        run: npm run build
      - name: Archive production artifact
        uses: actions/upload-artifact@master
        with:
          name: dist
          path: dist

  coveralls:
    name: Coveralls
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Download artifact
        uses: actions/download-artifact@master
        with:
          name: reports
          path: reports
      - name: Send coverage to Coveralls
        uses: coverallsapp/github-action@v1.0.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./reports/coverage/lcov.info

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Download artifact
        uses: actions/download-artifact@master
        with:
          name: dist
          path: dist
      - name: Deploy to Firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
